AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy python lambda

Parameters:
  Revision:
    Type: String
    Description: The commit that originated this deployment. Helps trigger new deploys to the lambda.
  MailgunDomain:
    Type: String
    Description: MailGun domain
  MailgunApiKey:
    Type: String
    Description: MailGun API KEY

Resources:
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}"
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Code:
        ImageUri:
          !Join
          - ""
          - - !ImportValue 'email-worker-ecr-export'
            - !Sub ":${Revision}"
      Environment:
        Variables:
          QUEUE_URL: !ImportValue "email-worker-sqs-url-export"
          MAILGUN_DOMAIN: !Sub "${MailgunDomain}"
          MAILGUN_API_KEY: !Sub "${MailgunApiKey}"
      PackageType: Image
      MemorySize: 128
      Timeout: 30

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaBasicExecution"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: '*'
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: '*'
              - Effect: "Allow"
                Action:
                  - "s3:*"
                Resource: "*"

  MyLambdaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      EventSourceArn: !ImportValue "email-worker-sqs-arn-export"
      FunctionName: !GetAtt MyLambdaFunction.Arn
      Enabled: True

Outputs:
  LambdaName:
    Description: Name of the lambda
    Value: !Ref MyLambdaFunction
    Export:
      Name: !Sub "${AWS::StackName}-export"