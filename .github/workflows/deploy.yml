name: Deploy Email Worker

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Run tests
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install -r src/tests/requirements.txt
          coverage run -m unittest discover -s src/tests -v
          coverage report

      - name: Run lint
        run: |
          source venv/bin/activate
          flake8

  deploy_infra:
    name: Deploy infrastructure
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy SQS
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: email-worker-sqs
          template: cloudformation/sqs.yml
          no-fail-on-empty-changeset: 1

      - name: Deploy bucket
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: email-worker-bucket
          template: cloudformation/s3.yml
          no-fail-on-empty-changeset: 1

  deploy_service:
    name: Deploy service to lambda
    runs-on: ubuntu-latest
    environment: production
    needs: ['deploy_infra', 'test']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Zip and Upload lambda
        run: |
          python -m venv venv          
          source venv/bin/activate
          pip install -r requirements.txt
          mkdir python
          cp -r venv/lib python/
          zip -r dependencies.zip python
          zip -r lambda.zip src
          aws s3 cp lambda.zip s3://email-worker-bucket/${{ github.run_id }}.zip
          aws s3 cp dependencies.zip s3://email-worker-bucket/dependencies.zip

      - name: Deploy lambda
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: email-worker-lambda
          template: cloudformation/lambda.yml
          parameter-overrides: "Revision=${{ github.run_id }},MailgunDomain=${{ secrets.MAILGUN_DOMAIN }},MailgunApiKey=${{ secrets.MAILGUN_API_KEY }},ResumesBucket=${{ secrets.RESUMES_BUCKET }}"
          no-fail-on-empty-changeset: 1
